import tarfile
from pathlib import Path
import requests
import os 
import shutil
import string
import random
from typing import List

def generate_unique_name():
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=12))

def find(name, path):
    for root, dirs, files in os.walk(path):
        if name in files:
            return os.path.join(root, name)



class UntarModel: 
    def __init__(self, tar_paths_list: List[str] = []):
        if(tar_paths_list == []): return False

    def remove_directory(self, path):
        try:
            print(f"Removing directory {path}")
            shutil.rmtree(os.path.join(path))
        except OSError as e:
            print("Error: %s - %s." % (e.filename, e.strerror))


    def get_loras(self, urllists):
        local_folder_all_loras = '_MAIN__'+generate_unique_name()
        local_tmp_folder = '_TMP__'+generate_unique_name()
        os.makedirs(local_folder_all_loras)
        os.makedirs(local_tmp_folder)

        array_of_loras = []

        # check the extension
        for number_of_lora_in_array, url in enumerate(urllists):
            # Split the extension from the path and normalise it to lowercase.
            ext = Path(url).suffix
            local_folder_name = "./" + local_tmp_folder + "/" + generate_unique_name()
            
            # Now we can simply use == to check for equality, no need for wildcards.
            if ext == ".tar":
                try:
                    # downlaod the file
                    print(f"Downloading the {url} file in {local_folder_name}...")
                    os.makedirs(local_folder_name)

                    # empty file for debug
                    # lora_file = local_folder_name + "/lora.safetensors"
                    # open(lora_file, 'a').close()
                    
                    # Download the model generated by SDXL + LoRA
                    response = requests.get(url, stream=True)
                    file = tarfile.open(fileobj=response.raw, mode="r|*")

                    # untar the file
                    file.extractall(path=local_folder_name)
                    lora_file = local_folder_name+"/lora.safetensors"
                    new_name = "__" + str(number_of_lora_in_array)+"__lora.safetensors"
                    os.rename(lora_file, local_folder_name + "/" + new_name)
                    shutil.move(local_folder_name + "/__" + new_name, local_folder_all_loras + "/__" + new_name)
                    array_of_loras.push(local_folder_all_loras + "/__" + new_name)

                except requests.RequestException as err:
                    # do something smart when that exception occurs!
                    print(f"Exception has occured: {err}")

        # delete temp directory 
        self.remove_directory(local_tmp_folder)

        return (local_folder_all_loras,array_of_loras)
    
